
sp_land_high_powered_lasers = {
	specialization = specialization_land

	project_tags = sp_tag_artillery

	#allowed = {
	#	has_dlc = "Gotterdammerung"
	#}
	
	available = {
		FROM = {
			has_tech = advanced_computing_machine
            has_tech = artillery2
		}
	}
	
	prototype_time = sp_time.prototype.short

	complexity = sp_complexity.medium

	breakthrough_cost = {
		specialization_land = 1
	}
	
	project_output = {
		enable_subunits = {
		}

		enable_equipments = {
		}

		country_effects = {
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH_WITH_EXTRA_PROJECT
				TECH = sp_rocket_assisted_projectiles_tech
				EXTRA_PROJECT = sp_rockets_rocket_engine
			}
			mark_technology_tree_layout_dirty = yes
		}
	}

	generic_prototype_rewards = {
		sp_land_generic_reward_scientist_xp_1
		sp_land_generic_reward_scientist_xp_2
		sp_land_generic_reward_scientist_xp_3
		sp_land_generic_reward_army_xp_1
		sp_land_generic_reward_army_xp_2
		sp_land_generic_reward_army_xp_3
		sp_land_generic_reward_major_progress_1
		sp_land_generic_reward_major_progress_2
		sp_land_generic_reward_major_progress_3
		sp_land_generic_reward_test_failure_1
		sp_land_generic_reward_test_failure_2
		sp_land_generic_reward_test_failure_3
		sp_land_generic_reward_artillery_tech_1
		sp_land_generic_reward_artillery_tech_2
		sp_land_generic_reward_artillery_tech_3
		sp_land_generic_reward_artillery_bonus_1
		sp_land_generic_reward_artillery_bonus_2
		sp_land_generic_reward_artillery_bonus_3
		sp_land_generic_reward_resource_scarcity
		sp_land_generic_reward_critical_failure
	}

	unique_prototype_rewards = {

		sp_land_reward_super_heavy_howitzer_focus_preference = {
			fire_only_once = yes

			threshold = { 
				min = 30
				max = 100
			}

			weight = {
				base = 50
			}

			option = {
				token = sp_land_reward_option_super_heavy_howitzer_focus_preference_balance
				
				iteration_output = {
					country_effects = {
						custom_effect_tooltip = {
							localization_key = generic_no_effects_to_equipment_tt
							EQUIPMENT = super_heavy_artillery_equipment_1
						}
					}
				}
			}

			option = {
				token = sp_land_reward_option_super_heavy_howitzer_focus_preference_firepower
				
				iteration_output = {
					equipment_bonus = {
						#super_heavy_artillery_equipment_1 = {
						#	build_cost_ic = 0.15
						#	soft_attack = 0.07
						#	additional_collateral_damage = 0.05
						#}
					}
					
					country_effects = {
					}
				}
			}

			option = {
				token = sp_land_reward_option_super_heavy_howitzer_focus_preference_production
				
				iteration_output = {
					equipment_bonus = {
						#super_heavy_artillery_equipment_1 = {
						#	build_cost_ic = 0.15
						#	soft_attack = 0.07
						#	additional_collateral_damage = 0.05
						#}
					}
					
					country_effects = {
					}
				}
			}
		}
	}
}

sp_land_multi_charge_large_caliber_gun = {
	specialization = specialization_land

	project_tags = sp_tag_artillery

	allowed = {
		has_dlc = "Gotterdammerung"
	}

	special_project_parent = {
		sp_land_high_powered_lasers
	}
		
	prototype_time = sp_time.prototype.medium

	complexity = sp_complexity.small

	breakthrough_cost = {
		specialization_land = 1
	}
	
	project_output = {
		country_effects = {
			custom_override_tooltip = {
				tooltip = {
					localization_key = SP_UNLOCK_BUILDING_ICON_DESC
					BUILDING = mega_gun_emplacement
					BUILDING_DESCRIPTION = mega_gun_emplacement_desc
					ICON_FRAME = 24
				}
				#hidden_effect = { #TODO_Manu: Uncomment this if we get code support for implementing small scale of V-3
				#	if = {
				#		limit = {
				#			FROM = { has_project_flag = multi_charge_large_caliber_gun_small_size_flag }
				#		}
				#		add_equipment_bonus = {
				#			bonus = {
				#				explosive_ammo_equipment_1 = {
				#					air_range = -0.25
				#					air_bombing = -0.35
				#				}
				#			}
				#		}
				#		add_ideas = sp_multi_charge_large_caliber_gun_small_size_ns
				#	}
				#}
				set_technology = {
					land_multi_charge_large_caliber_gun_tech = 1
					popup = no
				}
			}
		}
	}

	generic_prototype_rewards = {
		sp_land_generic_reward_scientist_xp_1
		sp_land_generic_reward_scientist_xp_2
		sp_land_generic_reward_scientist_xp_3
		sp_land_generic_reward_army_xp_1
		sp_land_generic_reward_army_xp_2
		sp_land_generic_reward_army_xp_3
		sp_land_generic_reward_major_progress_1
		sp_land_generic_reward_major_progress_2
		sp_land_generic_reward_major_progress_3
		sp_land_generic_reward_test_failure_1
		sp_land_generic_reward_test_failure_2
		sp_land_generic_reward_test_failure_3
		sp_land_generic_reward_artillery_tech_1
		sp_land_generic_reward_artillery_tech_2
		sp_land_generic_reward_artillery_tech_3
		sp_land_generic_reward_artillery_bonus_1
		sp_land_generic_reward_artillery_bonus_2
		sp_land_generic_reward_artillery_bonus_3
		sp_land_generic_reward_resource_scarcity
	}

	unique_prototype_rewards = {

		sp_land_reward_multi_charge_large_caliber_gun_successful_test_firing = {
			fire_only_once = yes

			threshold = { 
				min = 0
				max = 70
			}

			weight = {
				base = 5
			}

			option = {
				token = sp_land_reward_option_multi_charge_large_caliber_gun_successful_test_firing
				
				iteration_output = {
					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.gain.medium }
					}

					scientist_effects = {
						if = {
							limit = {
								has_scientist_level = {
									level < 5
									specialization = specialization_land
								}
							}
							add_scientist_xp = {
								experience = constant:sp_scientist_xp_gain.low
								specialization = specialization_land
							}
						}
					}
				}
			}
		}

		sp_land_reward_multi_charge_large_caliber_gun_test_failure = {
			fire_only_once = yes

			threshold = { 
				min = 0
				max = 70
			}

			weight = {
				base = 1
			}

			option = {
				token = sp_land_reward_option_multi_charge_large_caliber_gun_test_failure
				
				iteration_output = {
					facility_state_effects = {
						damage_building = {
							tags = facility
							damage = 0.25
							province = var:facility_province_id
						}
						damage_building = {
							type = infrastructure 
							damage = 0.15
						}
					}

					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.loss.medium }
					}

					scientist_effects = {
						if = {
							limit = {
								has_scientist_level = {
									level < 5
									specialization = specialization_land
								}
							}
							add_scientist_xp = {
								experience = constant:sp_scientist_xp_gain.low
								specialization = specialization_land
							}
						}
					}
				}
			}
		}

		sp_land_reward_multi_charge_large_caliber_gun_breakthrough_in_propulsion_technology = {
			fire_only_once = yes

			threshold = { 
				min = 60
				max = 100
			}

			weight = {
				base = 2
			}

			option = {
				token = sp_land_reward_option_multi_charge_large_caliber_gun_breakthrough_in_propulsion_technology
				
				iteration_output = {
					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.gain.high }

						add_breakthrough_progress = {
							specialization = specialization_land
							value = sp_breakthrough_progress.low
						}
					}

					scientist_effects = {
						if = {
							limit = {
								NOT = { has_trait = scientist_trait_fast_learner }
							}
							random_list = {
								70 = {
									#No effect
								}
								30 = {
									add_scientist_trait = scientist_trait_fast_learner
								}
							}
						}
						else_if = {
							limit = {
								NOT = { has_trait = scientist_trait_bright }
							}
							random_list = {
								80 = {
									#No effect
								}
								20 = {
									add_scientist_trait = scientist_trait_bright
								}
							}
						}
					}
				}
			}
		}

		#TODO_Manu: Choice between original big V-3 or half the size (Luxembourg ones) - This requires Code Support (equipment bonus is not applied atm) - uncomment if code support comes in
#		sp_land_reward_multi_charge_large_caliber_gun_size_choice = {
#			fire_only_once = yes
#
#			threshold = { 
#				min = 40
#				max = 100
#			}
#
#			weight = {
#				base = 50
#			}
#
#			option = {
#				token = sp_land_reward_option_multi_charge_large_caliber_gun_gun_size_choice_regular
#				
#				iteration_output = {
#					country_effects = {
#						custom_override_tooltip = {
#							tooltip = {
#								localization_key = SP_UNLOCK_BUILDING
#								BUILDING = mega_gun_emplacement
#							}
#						}
#					}
#					#TODO_Manu: Proper explanation for tooltip
#				}
#			}
#
#			option = {
#				token = sp_land_reward_option_multi_charge_large_caliber_gun_gun_size_choice_small
#				
#				iteration_output = {
#					country_effects = {
#						custom_override_tooltip = {
#							tooltip = {
#								localization_key = SP_UNLOCK_BUILDING
#								BUILDING = mega_gun_emplacement
#							}
#						}
#						#TODO_Manu: Proper explanation for tooltip
#							
#						FROM = { set_project_flag = multi_charge_large_caliber_gun_small_size_flag } #To apply effects to weaken the explosive ammo equipment used by the Mega-Gun Emplacement and make the building cheaper.
#					}
#				}
#			}
#		}
	}
}

sp_land_land_cruiser = {
	specialization = specialization_land

	project_tags = sp_tag_tank

	allowed = {
		has_dlc = "Gotterdammerung"
	}

	available = { #TODO_Manu: UNCOMMENT THIS IN THE NAME OF GOD!
		#if = {
		#	limit = {
		#		has_dlc = "No Step Back"
		#	}
		#	FROM = {
		#		has_tech = super_heavy_tank_chassis
		#	}
		#}
		#else = {
		#	FROM = {
		#		has_tech = super_heavy_tank
		#	}
		#}
	}

	visible = {
		FROM = {
			has_tech = main_battle_tank_chassis_10s
		}
	}
	
	prototype_time = sp_time.prototype.medium

	complexity = sp_complexity.insane

	breakthrough_cost = {
		specialization_land = 1 #TODO_Manu: 3 #UNCOMMENT THISSSSSSSS
	}
	
	project_output = {
		country_effects = { 
			if = {
				limit = {
					has_dlc = "No Step Back"
				}
				#set_technology = { #TODO_Manu: NEW EVERYTHING!! (Role, equipment, chassis, modules, etc.) -> Code Support
				#	super_heavy_tank_chassis = 1
				#}
			}
			else = {
				#set_technology = { #TODO_Manu: NEW EVERYTHING!! (Role, equipment, chassis, modules, etc.) -> Code Support
				#	super_heavy_tank = 1
				#}
			}
			#custom_effect_tooltip = "Placeholder tech. Represents German Rätte. Could become a new Monster tank with its own modules."
		}

		enable_equipments = {
			#land_cruiser_chassis_1
		}

		enable_equipment_modules = {
            lc_heavy_naval_guns
			tank_lc_spec_tower
			tank_lc_spec_bunker
			tank_lc_spec_gattling
			#tank_lc_ad_nuclear
			lc_tank_nuclear_engine
			lc_tank_nuclear_engine_2
			lc_tank_diesel_engine
			lc_radio_1
		}

		enable_subunits = {
			land_cruiser
		}
	}

	generic_prototype_rewards = {
		sp_land_generic_reward_scientist_xp_1
		sp_land_generic_reward_scientist_xp_2
		sp_land_generic_reward_scientist_xp_3
		sp_land_generic_reward_army_xp_1
		sp_land_generic_reward_army_xp_2
		sp_land_generic_reward_army_xp_3
		sp_land_generic_reward_major_progress_1
		sp_land_generic_reward_major_progress_2
		sp_land_generic_reward_major_progress_3
		sp_land_generic_reward_test_failure_1
		sp_land_generic_reward_test_failure_2
		sp_land_generic_reward_test_failure_3
		sp_land_generic_reward_armor_tech_1
		sp_land_generic_reward_armor_tech_2
		sp_land_generic_reward_armor_tech_3
		sp_land_generic_reward_armor_bonus_1
		sp_land_generic_reward_armor_bonus_2
		sp_land_generic_reward_armor_bonus_3
		sp_land_generic_reward_engine_bonus_1
		sp_land_generic_reward_engine_bonus_2
		sp_land_generic_reward_engine_bonus_3
		sp_land_generic_reward_resource_scarcity
		sp_land_generic_reward_critical_failure
	}

	#TODO_Manu: Unique Reward - Extra Mega-Heavy Tank Modules?
	#TODO_Manu: Unique Reward - Early Prototype
}

################## DRONES ###################
sp_small_infantry_drones = {
	specialization = specialization_land
	icon = GFX_sp_small_infantry_drones

	ai_will_do = {
		base = 0
	}

	allowed = {
	}
	
	available = {
        #FROM = {
		#	has_tech = mechanical_computing
		#}
	}
	
	prototype_time = sp_time.prototype.short

	complexity = sp_complexity.medium
	
	project_output = {
		country_effects = {
			add_political_power = 100
		}
	}

	generic_prototype_rewards = {
		sp_land_generic_reward_scientist_xp_1
	}

	unique_prototype_rewards = {

	}
}
sp_drone_swarms = {
	specialization = specialization_land
	icon = GFX_sp_drone_swarms

	ai_will_do = {
		base = 0
	}

	allowed = {
	}
    special_project_parent = {
		sp_small_infantry_drones
	}
	
	available = {
        FROM = {
			has_tech = drones2
		}
	}
	
	prototype_time = sp_time.prototype.short

	complexity = sp_complexity.medium
	
	project_output = {
		country_effects = {
			add_political_power = 100
		}
	}

	generic_prototype_rewards = {
		sp_land_generic_reward_scientist_xp_1
	}

	unique_prototype_rewards = {

	}
}